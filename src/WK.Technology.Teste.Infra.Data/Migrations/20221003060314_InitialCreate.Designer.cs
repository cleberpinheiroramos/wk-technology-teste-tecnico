// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WK.Technology.Teste.Infra.Data.Context;

#nullable disable

namespace WK.Technology.Teste.Infra.Data.Migrations
{
    [DbContext(typeof(ContextWkTechnology))]
    [Migration("20221003060314_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WK.Technology.Teste.Domain.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasComment("Identificador exclusivo e universal para a entidade");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasComment("Registro do usuário que cadastrou a entidade");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp")
                        .HasComment("Registro de data/hora de quando o usuário cadastrou a entidade");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasComment("Registro do usuário que realizou a última alteração na entidade");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp")
                        .HasComment("Registro de data/hora da última atualização da entidade");

                    b.HasKey("Id")
                        .HasName("PK_Category");

                    b.ToTable("Categorys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Jonathan_Dietrich@gmail.com",
                            CreatedOn = new DateTime(2021, 10, 23, 14, 2, 5, 157, DateTimeKind.Local).AddTicks(2055),
                            Name = "Grocery, Automotive & Books",
                            UpdatedBy = "Jonathan_Dietrich@gmail.com",
                            UpdatedOn = new DateTime(2021, 10, 17, 8, 19, 10, 269, DateTimeKind.Local).AddTicks(3295)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "Emily98@hotmail.com",
                            CreatedOn = new DateTime(2022, 3, 7, 8, 6, 19, 17, DateTimeKind.Local).AddTicks(4826),
                            Name = "Industrial, Tools & Music",
                            UpdatedBy = "Emily98@hotmail.com",
                            UpdatedOn = new DateTime(2022, 8, 11, 0, 40, 46, 366, DateTimeKind.Local).AddTicks(6092)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "Gregg96@hotmail.com",
                            CreatedOn = new DateTime(2022, 9, 22, 23, 5, 51, 936, DateTimeKind.Local).AddTicks(2183),
                            Name = "Industrial, Computers & Kids",
                            UpdatedBy = "Gregg96@hotmail.com",
                            UpdatedOn = new DateTime(2022, 8, 3, 20, 56, 1, 626, DateTimeKind.Local).AddTicks(2454)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = "Marianne30@yahoo.com",
                            CreatedOn = new DateTime(2022, 8, 30, 9, 48, 22, 7, DateTimeKind.Local).AddTicks(7574),
                            Name = "Books, Electronics & Clothing",
                            UpdatedBy = "Marianne30@yahoo.com",
                            UpdatedOn = new DateTime(2022, 2, 4, 3, 17, 19, 286, DateTimeKind.Local).AddTicks(60)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = "Kristin64@hotmail.com",
                            CreatedOn = new DateTime(2021, 12, 14, 2, 13, 45, 553, DateTimeKind.Local).AddTicks(458),
                            Name = "Computers & Health",
                            UpdatedBy = "Kristin64@hotmail.com",
                            UpdatedOn = new DateTime(2021, 10, 20, 7, 35, 10, 456, DateTimeKind.Local).AddTicks(2050)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = "Marilyn.Hessel84@hotmail.com",
                            CreatedOn = new DateTime(2022, 3, 3, 21, 17, 11, 536, DateTimeKind.Local).AddTicks(8693),
                            Name = "Books",
                            UpdatedBy = "Marilyn.Hessel84@hotmail.com",
                            UpdatedOn = new DateTime(2022, 5, 3, 15, 39, 34, 760, DateTimeKind.Local).AddTicks(7550)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = "Wallace_Koch@hotmail.com",
                            CreatedOn = new DateTime(2022, 4, 1, 10, 8, 8, 628, DateTimeKind.Local).AddTicks(580),
                            Name = "Outdoors, Toys & Toys",
                            UpdatedBy = "Wallace_Koch@hotmail.com",
                            UpdatedOn = new DateTime(2022, 8, 13, 23, 57, 15, 69, DateTimeKind.Local).AddTicks(7307)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = "Debbie_Stracke32@hotmail.com",
                            CreatedOn = new DateTime(2022, 2, 3, 9, 50, 1, 932, DateTimeKind.Local).AddTicks(544),
                            Name = "Clothing & Electronics",
                            UpdatedBy = "Debbie_Stracke32@hotmail.com",
                            UpdatedOn = new DateTime(2022, 3, 4, 0, 49, 32, 668, DateTimeKind.Local).AddTicks(5428)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = "Gary76@yahoo.com",
                            CreatedOn = new DateTime(2022, 8, 22, 15, 18, 38, 190, DateTimeKind.Local).AddTicks(9422),
                            Name = "Automotive",
                            UpdatedBy = "Gary76@yahoo.com",
                            UpdatedOn = new DateTime(2022, 5, 11, 20, 38, 9, 130, DateTimeKind.Local).AddTicks(9397)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = "Jesse.Runolfsdottir75@hotmail.",
                            CreatedOn = new DateTime(2021, 12, 9, 6, 42, 39, 981, DateTimeKind.Local).AddTicks(9379),
                            Name = "Sports",
                            UpdatedBy = "Jesse.Runolfsdottir75@hotmail.",
                            UpdatedOn = new DateTime(2022, 7, 28, 22, 19, 36, 354, DateTimeKind.Local).AddTicks(1277)
                        });
                });

            modelBuilder.Entity("WK.Technology.Teste.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasComment("Identificador exclusivo e universal para a entidade");

                    b.Property<long?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasComment("Registro do usuário que cadastrou a entidade");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp")
                        .HasComment("Registro de data/hora de quando o usuário cadastrou a entidade");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasComment("Registro do usuário que realizou a última alteração na entidade");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp")
                        .HasComment("Registro de data/hora da última atualização da entidade");

                    b.HasKey("Id")
                        .HasName("PK_Product");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            CreatedBy = "Dennis79@hotmail.com",
                            CreatedOn = new DateTime(2022, 5, 26, 0, 29, 58, 495, DateTimeKind.Local).AddTicks(8992),
                            Description = "Practical",
                            Name = "Sleek Metal Hat",
                            Price = 463.63m,
                            UpdatedBy = "Dennis79@hotmail.com",
                            UpdatedOn = new DateTime(2021, 11, 9, 4, 11, 4, 441, DateTimeKind.Local).AddTicks(3422)
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            CreatedBy = "Isaac_Kulas96@gmail.com",
                            CreatedOn = new DateTime(2022, 1, 6, 14, 41, 43, 918, DateTimeKind.Local).AddTicks(5539),
                            Description = "Fantastic",
                            Name = "Tasty Rubber Chips",
                            Price = 423.38m,
                            UpdatedBy = "Isaac_Kulas96@gmail.com",
                            UpdatedOn = new DateTime(2022, 8, 22, 2, 12, 35, 602, DateTimeKind.Local).AddTicks(6966)
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 3L,
                            CreatedBy = "Kathleen.Schamberger20@gmail.c",
                            CreatedOn = new DateTime(2021, 10, 8, 16, 39, 2, 214, DateTimeKind.Local).AddTicks(2442),
                            Description = "Handcrafted",
                            Name = "Handmade Plastic Chicken",
                            Price = 451.96m,
                            UpdatedBy = "Kathleen.Schamberger20@gmail.c",
                            UpdatedOn = new DateTime(2021, 10, 10, 3, 53, 0, 502, DateTimeKind.Local).AddTicks(969)
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 4L,
                            CreatedBy = "Regina89@yahoo.com",
                            CreatedOn = new DateTime(2022, 9, 20, 18, 3, 18, 9, DateTimeKind.Local).AddTicks(9408),
                            Description = "Unbranded",
                            Name = "Handmade Wooden Pizza",
                            Price = 912.76m,
                            UpdatedBy = "Regina89@yahoo.com",
                            UpdatedOn = new DateTime(2022, 6, 2, 5, 24, 42, 680, DateTimeKind.Local).AddTicks(6626)
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 5L,
                            CreatedBy = "Louise_Wehner@yahoo.com",
                            CreatedOn = new DateTime(2022, 9, 26, 10, 44, 34, 297, DateTimeKind.Local).AddTicks(5648),
                            Description = "Licensed",
                            Name = "Ergonomic Metal Cheese",
                            Price = 832.54m,
                            UpdatedBy = "Louise_Wehner@yahoo.com",
                            UpdatedOn = new DateTime(2022, 4, 30, 10, 58, 41, 514, DateTimeKind.Local).AddTicks(2828)
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 6L,
                            CreatedBy = "Thomas.Bashirian@yahoo.com",
                            CreatedOn = new DateTime(2022, 6, 26, 10, 0, 40, 999, DateTimeKind.Local).AddTicks(3740),
                            Description = "Licensed",
                            Name = "Incredible Fresh Keyboard",
                            Price = 468.95m,
                            UpdatedBy = "Thomas.Bashirian@yahoo.com",
                            UpdatedOn = new DateTime(2022, 1, 27, 11, 0, 29, 69, DateTimeKind.Local).AddTicks(7909)
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 7L,
                            CreatedBy = "Sheri47@yahoo.com",
                            CreatedOn = new DateTime(2022, 7, 13, 12, 52, 42, 455, DateTimeKind.Local).AddTicks(7576),
                            Description = "Awesome",
                            Name = "Handmade Concrete Salad",
                            Price = 137.51m,
                            UpdatedBy = "Sheri47@yahoo.com",
                            UpdatedOn = new DateTime(2022, 3, 9, 20, 4, 53, 132, DateTimeKind.Local).AddTicks(6439)
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 8L,
                            CreatedBy = "Abraham_Kuhic@yahoo.com",
                            CreatedOn = new DateTime(2021, 10, 11, 23, 13, 39, 711, DateTimeKind.Local).AddTicks(1022),
                            Description = "Practical",
                            Name = "Refined Cotton Pizza",
                            Price = 562.86m,
                            UpdatedBy = "Abraham_Kuhic@yahoo.com",
                            UpdatedOn = new DateTime(2022, 7, 20, 2, 45, 46, 195, DateTimeKind.Local).AddTicks(8755)
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 9L,
                            CreatedBy = "Catherine_Russel74@gmail.com",
                            CreatedOn = new DateTime(2021, 11, 20, 15, 28, 55, 271, DateTimeKind.Local).AddTicks(6737),
                            Description = "Ergonomic",
                            Name = "Unbranded Fresh Pizza",
                            Price = 426.99m,
                            UpdatedBy = "Catherine_Russel74@gmail.com",
                            UpdatedOn = new DateTime(2022, 9, 3, 17, 5, 56, 385, DateTimeKind.Local).AddTicks(5905)
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 10L,
                            CreatedBy = "Leo_Parker@gmail.com",
                            CreatedOn = new DateTime(2022, 4, 20, 9, 30, 14, 641, DateTimeKind.Local).AddTicks(2464),
                            Description = "Unbranded",
                            Name = "Small Rubber Keyboard",
                            Price = 235.62m,
                            UpdatedBy = "Leo_Parker@gmail.com",
                            UpdatedOn = new DateTime(2021, 11, 15, 1, 5, 13, 462, DateTimeKind.Local).AddTicks(5757)
                        });
                });

            modelBuilder.Entity("WK.Technology.Teste.Domain.Entities.Product", b =>
                {
                    b.HasOne("WK.Technology.Teste.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WK.Technology.Teste.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
